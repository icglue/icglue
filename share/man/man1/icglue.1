.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.11.
.TH ICGLUE "1" "October 2019" "ICGlue 4.0" "User Commands"
.SH NAME
ICGlue \- manual page for ICGlue 4.0
.SH SYNOPSIS
.B icglue
[\fI\,OPTION\/\fR]... \fI\,FILE\/\fR
.SH DESCRIPTION
Tcl-Library for scripted HDL generation. It generates HDL code from a user-defined Tcl script.
.SH OPTIONS
Mandatory arguments to long options are mandatory for short options too.
.TP
\fB\-h\fR, \fB\-\-help\fR
Show help
.TP
\fB\-g\fR, \fB\-\-gui\fR
Show GUI
.TP
\fB\-t\fR, \fB\-\-template\fR=\fI\,FILE\/\fR
Set FILE to use as template
.TP
\fB\-\-template\-dir\fR=\fI\,DIR\/\fR
Add DIR to template path
.TP
\fB\-o\fR, \fB\-\-outtypes\fR=\fI\,LIST\/\fR
Comma\-separated list of output types to generate (or empty for everything).
.TP
\fB\-l\fR, \fB\-\-logger\fR=\fI\,TAG\/\fR
Enable output log of TAG (format: LEVEL,IDENTIFIER)
.TP
\fB\-a\fR, \fB\-\-args=K\fR[=\fI\,V\/\fR]
Set K to V before running icglue construction script
.TP
\fB\-n\fR, \fB\-\-dryrun\fR
Do not modify/writeout results, just run script and checks
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Show errors only
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be verbose
.TP
\fB\-d\fR, \fB\-\-debug\fR
Show debug output
.TP
\fB\-\-nocopyright\fR
Do not print the ICGlue copyright, version and logo upon start to stderr
.TP
\fB\-\-nocolor\fR
Do not use colorcodes in logger
.TP
\fB\-\-version\fR
Show version
.PP
If the FILE has the extention .sng or .icng, it will try to parse the input as icsng syntax and translate them to corresponding icglue commands.
Otherwise the FILE is interpreted as TCL\-Script which supports the icglue extension for hardware description.
.SH ENVIROMENT
Environment variables extend options passed to \fBicglue\fR.
Options specfied on the command line take precedence over enviroment variables.

.IP ICGLUE_TEMPLATE_PATH
Sets the template directories, equivalent to the \fB--template-dir\fR option. Mutliple directories must be seperated by a colon (:).

.IP ICGLUE_TEMPLATE
Sets the default template, equivalent to the \fB--template\fR option.

.IP ICGLUE_LINE_NUMBERS
Add line numbers to icglue logging print-out (debug)
.SH EXAMPLES
Creating hierarchies via the \fBM\fR command with the -tree flag:
.PP
.in +2n
The hierarchy level is specified by the indentation of non-alpha characters
.br
The modulename has to follow directly after this indentation.
.br
Multiple instances of the same module can be create be using the <...> syntax.
.br
Attributes of the module are passed in parentheses.
.br
See the \fBM\fR command in \fBig(10i)\fR for further details.
.PP
.in +4n
.EX
# Generate hierarchy in unit submodule
.br
\fBM\fR -unit "component" -tree {
.br
    tb_component ............. (tb,v)
    |
    +- component_top ......... (rtl)
    |  |
    |  \\- submod_wrap ........ (rtl,unit=submod_wrap)
    |     \\- submod_top ...... (inc)
    |
    \\- component_regfile...... (rf)
.br
}

\fBM\fR -unit "submod" -tree {
    submod_top ...................................... (rtl)
    |
    +- submod ....................................... (rtl)
    \\- common_sync<submod0..4,submod_my_sync>........ (res)
.br
}

.EE
.PP
Signals to connect modules are created with the \fBS\fR command:
.br
See the \fBS\fR command in \fBig(10i)\fR for further details.
.PP
.in +4n
.EX
# connections
.br
\fBS\fR "clk"                 tb_component  -->  component_regfile submod:core_clk_i
.br
\fBS\fR "resetn"              tb_component  -->  component_regfile submod:nrst_i
.br
\fBS\fR "rf_addr"       -w 32 tb_component  -->  component_regfile
.br
\fBS\fR "config_submod" -w 5  submod        <--  component_regfile
.br
\fBS\fR "status_submod" -w 16 submod        -->  component_regfile
.EE
.PP
Parameters are created with the \fBP\fR command and can be passed to one or more modules:
.br
See the \fBP\fR command in \fBig(10i)\fR for further details.
.PP
.in +4n
.EX
# parameters
.br
\fBP\fR DATA_W = 32 component_regfile submod
.EE
.PP

HDL code sections within the generated files can be created with the \fBC\fR command:
.br
See the \fBC\fR command in \fBig(10i)\fR for further details.
.PP
.in +4n
.EX
# code placed in submod_wrap
.br
\fBC\fR submod_wrap {
    assign reset_sync = ~data_valid;
.br
}
.EE
.PP

Regfile code can be create via the \fBR\fR command. Inline connections are possible.
.br
See the \fBR\fR command in \fBig(10i)\fR for further details.
.PP
.in +4n
.EX
\fBR\fR component_regfile "entry_name0" {
    "name"   | "entrybits" | "type" | "reset" | "signal"          | "comment"
    -----    | ----------- | -----  | ------- | --------          | ---------
    s_cfg    | 4:0         | RW     | 5\[aq]h0    | submod:s_cfg_i    | "Configure component"
    s_status | 31:16       | R      | 16\[aq]h0   | submod:s_status_o | "Component status"
.br
}
.PP
Same without inline connection:
.PP
.in +4n
.EX
.br
\fBS\fR "entry_name0_s_cfg"    -w 5  submod:s_cfg_i     <--  component_regfile
.br
\fBS\fR "entry_name0_s_status" -w 16 submod:s_status_o  -->  component_regfile
.br
\fBR\fR component_regfile "entry_name0" {
    "name"   | "entrybits" | "type" | "reset" | "signal"             | "comment"
    -----    | ----------- | -----  | ------- | --------             | ---------
    s_cfg    | 4:0         | RW     | 5\[aq]h0    | entry_name0_s_cfg    | "Configure component"
    s_status | 31:16       | R      | 16\[aq]h0   | entry_name0_s_status | "Component status"
.br
}
.PP
The extra-column "signalbit" can be used to split wires e.g.
.PP
.in +4n
.EX
\fBS\fR "s_cfg_large" -w 40 component_regfile  -->  submod
.br
\fBR\fR component_regfile "entry_name1_low" {
    "name" | "entrybits" | "type" | "reset" | "signal"    | "signalbits" | "comment"
    -----  | ----------- | -----  | ------- | --------    | ------------ | ---------
    s_cfg  | 31:0        | RW     | 32\[aq]h0   | s_cfg_large | 31:0         | "Configure submod part 0"
.br
}
.br
\fBR\fR component_regfile "entry_name1_high" {
    "name" | "entrybits" | "type" | "reset" | "signal"    | "signalbits" | "comment"
    -----  | ----------- | -----  | ------- | --------    | ------------ | ---------
    s_cfg  | 7:0         | RW     | 8\[aq]h0    | s_cfg_large | 39:32        | "Configure submod part 1"
.br
}
.EE
.PP
.SH AUTHOR
Written by Andreas Dixius, Felix Neumaerker
.SH "REPORTING BUGS"
Reports bugs to \fBbugs@icglue.org\fR.
.br
Visit the ICGlue home page for more details: \fBhttps://icglue.org\fR
.SH COPYRIGHT
Copyright \(co 2017\-2019 Andreas Dixius, Felix Neumaerker
.PP
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
\fBig(10i)\fR - Scripting commands manpage
.PP
View the HTML documentation of the Tcl-library at \fB%DOCDIRTCL%/html/index.html\fR
\" vim: ft=nroff
